I started working with this tool in early January 2015 and made it work for my AcuRite 
5n1 sensor.  There were several changes to the AcuRite decoder necessary.  This version 
of rtl_433 installed the necessary parts of librtl because of some difficulties.  I
found the installtion this way easier than the method of hunting down the proper
version of librtl and installing it as a separate step.  It just makes sense to do
it this way since I'm only interested in decoding the AcuRite sensor.

Yes, I tried varios techniques of keeping this with the orignal rtl_433 and just
couldn't overcome the strange methods available under GitHub.

This also leaves me free to change anything I want to and not to have to worry about
messing someone else up.

dave


rtl_433, turns your Realtek RTL2832 based DVB dongle into a 433.92MHz generic data receiver
======================================================================

Installation instructions:

cd rtl_433/
mkdir build
cd build
cmake ../
make


Running:

./rtl_433 -h

Usage:  [-d device_index (default: 0)]
    [-g gain (default: 0 for auto)]
    [-a analyze mode, print a textual description of the signal]
    [-l change the detection level used to determine pulses (0-32000) default 10000]
    [-f change the receive frequency, default is 433.92MHz]
    [-S force sync output (default: async)]
    [-r read data from file instead of from a receiver]
    filename (a '-' dumps samples to stdout)


./rtl_433 -a will run in analyze mode and you will get a text log of the received signal.
./rtl_433 -a file_name will save the demodulated signal in a file. The format of the file is 48kHz 16 bit samples.
./rtl_433 will run the software in receive mode. Some sensor data can be receviced.

This software is mostly useable for developers right now.
